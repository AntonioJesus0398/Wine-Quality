Coefficient_of_variation = sd(x)/mean(x) * 100
)
}
display = function(x)
{
boxplot(x, horizontal = TRUE, col = "orange")
hist(x)
}
analize = function(c_name)
{
measures(c_name)
display(c_name)
}
display(wine_table$quality)
boxplot(wine_table$quality, horizontal = TRUE, col = "orange")
setwd("D:/Escuela/4to/Estadística/1 er projecto/Wine-Quality")
wine_table = read.csv("./dataset/wine.csv")
get_mode <- function(x)
{
uniq <- unique(x)
uniq[which.max(tabulate(match(x, uniq)))]
}
measures = function(c_name)
{
x = wine_table[, c_name]
list(
Mean = mean(x),
Median = median(x),
Mode = get_mode(x),
Variance = var(x),
Standard_Deviation = sd(x),
Coefficient_of_variation = sd(x)/mean(x) * 100
)
}
#display = function(x)
#{
# boxplot(x, horizontal = TRUE, col = "orange")
# hist(x)
#}
#analize = function(c_name)
#{
# measures(c_name)
#  display(c_name)
#}
boxplot(wine_table$quality, horizontal = TRUE, col = "orange")
setwd("D:/Escuela/4to/Estadística/1 er projecto/Wine-Quality")
wine_table = read.csv("./dataset/wine.csv")
get_mode <- function(x)
{
uniq <- unique(x)
uniq[which.max(tabulate(match(x, uniq)))]
}
measures = function(c_name)
{
x = wine_table[, c_name]
list(
Mean = mean(x),
Median = median(x),
Mode = get_mode(x),
Variance = var(x),
Standard_Deviation = sd(x),
Coefficient_of_variation = sd(x)/mean(x) * 100
)
}
#display = function(x)
#{
# boxplot(x, horizontal = TRUE, col = "orange")
# hist(x)
#}
#analize = function(c_name)
#{
# measures(c_name)
#  display(c_name)
#}
boxplot(wine_table$quality, horizontal = TRUE, col = "orange")
display(wine_table$quality)
display = function(x)
{
boxplot(x, horizontal = TRUE, col = "orange")
hist(x)
}
#analize = function(c_name)
#{
# measures(c_name)
#  display(c_name)
#}
display(wine_table$quality)
setwd("D:/Escuela/4to/Estadística/1 er projecto/Wine-Quality")
wine_table = read.csv("./dataset/wine.csv")
get_mode <- function(x)
{
uniq <- unique(x)
uniq[which.max(tabulate(match(x, uniq)))]
}
measures = function(x)
{
list(
Mean = mean(x),
Median = median(x),
Mode = get_mode(x),
Variance = var(x),
Standard_Deviation = sd(x),
Coefficient_of_variation = sd(x)/mean(x) * 100
)
}
display = function(x)
{
boxplot(x, horizontal = TRUE, col = "orange")
hist(x)
}
analize = function(x)
{
measures(x)
display(x)
}
analize(wine_table$quality)
setwd("D:/Escuela/4to/Estadística/1 er projecto/Wine-Quality")
wine_table = read.csv("./dataset/wine.csv")
get_mode <- function(x)
{
uniq <- unique(x)
uniq[which.max(tabulate(match(x, uniq)))]
}
measures = function(x)
{
list(
Mean = mean(x),
Median = median(x),
Mode = get_mode(x),
Variance = var(x),
Standard_Deviation = sd(x),
Coefficient_of_variation = sd(x)/mean(x) * 100
)
}
display = function(x)
{
boxplot(x, horizontal = TRUE, col = "orange")
hist(x)
}
analize = function(x)
{
m <- measures(x)
m
display(x)
}
analize(wine_table$quality)
setwd("D:/Escuela/4to/Estadística/1 er projecto/Wine-Quality")
wine_table = read.csv("./dataset/wine.csv")
get_mode <- function(x)
{
uniq <- unique(x)
uniq[which.max(tabulate(match(x, uniq)))]
}
measures = function(x)
{
list(
Mean = mean(x),
Median = median(x),
Mode = get_mode(x),
Variance = var(x),
Standard_Deviation = sd(x),
Coefficient_of_variation = sd(x)/mean(x) * 100
)
}
display = function(x)
{
boxplot(x, horizontal = TRUE, col = "orange")
hist(x)
}
analize = function(x)
{
print(measures(x))
display(x)
}
analize(wine_table$quality)
setwd("D:/Escuela/4to/Estadística/1 er projecto/Wine-Quality")
wine_table = read.csv("./dataset/wine.csv")
get_mode <- function(x)
{
uniq <- unique(x)
uniq[which.max(tabulate(match(x, uniq)))]
}
measures = function(x)
{
list(
Mean = mean(x),
Median = median(x),
Mode = get_mode(x),
Variance = var(x),
Standard_Deviation = sd(x),
Coefficient_of_variation = sd(x)/mean(x) * 100
)
}
display = function(x)
{
boxplot(x, horizontal = TRUE, col = "orange")
hist(x)
}
analize = function(x)
{
print(measures(x))
display(x)
}
analize(wine_table$quality)
setwd("D:/Escuela/4to/Estadística/1 er projecto/Wine-Quality")
wine_table = read.csv("./dataset/wine.csv")
get_mode <- function(x)
{
uniq <- unique(x)
uniq[which.max(tabulate(match(x, uniq)))]
}
measures = function(x)
{
list(
Mean = mean(x),
Median = median(x),
Mode = get_mode(x),
Variance = var(x),
Standard_Deviation = sd(x),
Coefficient_of_variation = sd(x)/mean(x) * 100
)
}
display = function(x)
{
boxplot(x, horizontal = TRUE, col = "orange")
hist(x)
}
analize = function(x)
{
print(measures(x))
display(x)
}
analize(wine_table$quality)
analize(wine_table$ph)
analize(wine_table$alcohol)
setwd("D:/Escuela/4to/Estadística/1 er projecto/Wine-Quality")
wine_table = read.csv("./dataset/wine.csv")
get_mode <- function(x)
{
uniq <- unique(x)
uniq[which.max(tabulate(match(x, uniq)))]
}
measures = function(x)
{
list(
Mean = mean(x),
Median = median(x),
Mode = get_mode(x),
Variance = var(x),
Standard_Deviation = sd(x),
Coefficient_of_variation = sd(x)/mean(x) * 100
)
}
display = function(x)
{
boxplot(x, horizontal = TRUE, col = "orange")
hist(x)
}
analize = function(x)
{
print(measures(x))
display(x)
}
analize(wine_table$quality)
analize(wine_table$pH)
analize(wine_table$alcohol)
p <- rnorm(500, 0, 1)
s1 <- sample(p, size = 300)
hist(s1)
p <- rnorm(500, 0, 1)
s1 <- sample(p, size = 300)
s2 <- sample(p, size = 40)
s3 <- sample(p, size = 30)
s4 <- sample(p, size = 20)
sr1 <- sample(p, size = 300, replace = TRUE)
sr2 <- sample(p, size = 40, replace = TRUE)
sr3 <- sample(p, size = 30, replace = TRUE)
sr4 <- sample(p, size = 20, replace = TRUE)
analize(p)
setwd("D:/Escuela/4to/Estadística/1 er projecto/Wine-Quality")
wine_table = read.csv("./dataset/wine.csv")
get_mode <- function(x)
{
uniq <- unique(x)
uniq[which.max(tabulate(match(x, uniq)))]
}
measures = function(x)
{
list(
Mean = mean(x),
Median = median(x),
Mode = get_mode(x),
Variance = var(x),
Standard_Deviation = sd(x),
Coefficient_of_variation = sd(x)/mean(x) * 100
)
}
display = function(x)
{
boxplot(x, horizontal = TRUE, col = "orange")
hist(x)
}
analize = function(x)
{
print(measures(x))
display(x)
}
analize(wine_table$quality)
analize(wine_table$pH)
analize(wine_table$alcohol)
p <- rnorm(500, 0, 1)
s1 <- sample(p, size = 300)
get_confidence_interval = function(s, cl)
{
# s: sample
# cl: confidence level
n <- length(x)
m <- mean(s)
sd <- sd(s)
z = pnorm(1-cl/2)
left <- m - z * sd/sqrt(n)
right <- m + z * sd/sqrt(n)
print("Left bound: " + left)
right("Right bound: " + right)
}
get_confidence_interval(s1, 0.0005)
library(glue)
mean_confidence_interval = function(s, cl)
{
# s: sample
# cl: confidence level
n <- length(x)
m <- mean(s)
sd <- sd(s)
z = pnorm(1-cl/2)
left <- m - z * sd/sqrt(n)
right <- m + z * sd/sqrt(n)
glue("Left bound: {left}")
glue("Right bound: {right}")
}
mean_confidence_interval(s1, 0.005)
mean_confidence_interval = function(s, cl)
{
# s: sample
# cl: confidence level
n <- length(x)
m <- mean(s)
sd <- sd(s)
z = pnorm(1-cl/2)
left <- m - z * sd/sqrt(n)
right <- m + z * sd/sqrt(n)
library(glue)
glue("Left bound: {left}")
glue("Right bound: {right}")
}
mean_confidence_interval(s1, 0.005)
mean_confidence_interval = function(s, cl)
{
# s: sample
# cl: confidence level
n <- length(x)
m <- mean(s)
sd <- sd(s)
z = pnorm(1-cl/2)
left <- m - z * sd/sqrt(n)
right <- m + z * sd/sqrt(n)
library(glue)
glue("Left bound: {left}")
#glue("Right bound: {right}")
}
mean_confidence_interval(s1, 0.005)
mean_confidence_interval = function(s, cl)
{
# s: sample
# cl: confidence level
n <- length(x)
m <- mean(s)
sd <- sd(s)
z = pnorm(1-cl/2)
left <- m - z * sd/sqrt(n)
right <- m + z * sd/sqrt(n)
library(glue)
glue("Left bound: {left}\nRight bound: {right}")
}
mean_confidence_interval(s1, 0.005)
mean_confidence_interval = function(s, cl)
{
# s: sample
# cl: confidence level
n <- length(x)
m <- mean(s)
sd <- sd(s)
z = pnorm(1-cl/2)
left <- m - z * sd/sqrt(n)
right <- m + z * sd/sqrt(n)
library(glue)
glue("Left bound: {left}\nRight bound: {right}")
}
mean_confidence_interval(s1, 0.005)
mean_confidence_interval = function(s, cl)
{
# s: sample
# cl: confidence level
n <- length(x)
m <- mean(s)
sd <- sd(s)
z = pnorm(1-cl/2)
left <- m - z * sd/sqrt(n)
right <- m + z * sd/sqrt(n)
library(glue)
glue("Left bound: {left}\nRight bound: {right}")
}
mean_confidence_interval(s1, 0.005)
mean_confidence_interval(s1, 0.005)
mean_confidence_interval = function(s, cl)
{
# s: sample
# cl: confidence level
n <- length(x)
m <- mean(s)
sd <- sd(s)
z = pnorm(1-cl/2)
left <- m - z * sd/sqrt(n)
right <- m + z * sd/sqrt(n)
library(glue)
glue("Mean confidence interval with confidence level {cl}:\nLeft bound: {left}\nRight bound: {right}")
}
mean_confidence_interval(s1, 0.005)
mean_confidence_interval(s4, 0.005)
library(glue)
mean_confidence_interval = function(s, cl)
{
# s: sample
# cl: confidence level
n <- length(x)
m <- mean(s)
sd <- sd(s)
if (n > 30)
{
z <- pnorm(1-cl/2)
left <- m - z * sd/sqrt(n)
right <- m + z * sd/sqrt(n)
}
else
{
t <- pt(1 - cl/2, n - 1)
left <- m - t * sd/sqrt(n)
right <- m + t * sd/sqrt(n)
}
glue("Mean confidence interval with confidence level {cl}:\nLeft bound: {left}\nRight bound: {right}")
}
variance_confidence_interval = function(s, cl)
{
# s: sample
# cl: confidence level
n <- length(x)
v <- var(s)
x1 <- pchisq(1 - cl/2, n-1)
x2 <- pchisq(cl/2, n-1)
left <- (n - 1) * v / x1
right <- (n - 1) * v / x2
glue("Variance confidence interval with confidence level {cl}:\nLeft bound: {left}\nRight bound: {right}")
}
s1 <- sample(p, size = 300)
s2 <- sample(p, size = 40)
s3 <- sample(p, size = 30)
s4 <- sample(p, size = 20)
mean_confidence_interval(s1, 0.005)
mean_confidence_interval(s2, 0.005)
mean_confidence_interval(s3, 0.005)
mean_confidence_interval(s4, 0.005)
variance_confidence_interval(s4, 0.005)
variance_confidence_interval(s1, 0.005)
variance_confidence_interval(s1, 0.01)
library(glue)
mean_confidence_interval = function(s, cl)
{
# s: sample
# cl: confidence level
n <- length(x)
m <- mean(s)
sd <- sd(s)
if (n > 30)
{
z <- qnorm(1-cl/2)
left <- m - z * sd/sqrt(n)
right <- m + z * sd/sqrt(n)
}
else
{
t <- qt(1 - cl/2, n - 1)
left <- m - t * sd/sqrt(n)
right <- m + t * sd/sqrt(n)
}
glue("Mean confidence interval with confidence level {cl}:\nLeft bound: {left}\nRight bound: {right}")
}
variance_confidence_interval = function(s, cl)
{
# s: sample
# cl: confidence level
n <- length(x)
v <- var(s)
x1 <- qchisq(1 - cl/2, n-1)
x2 <- qchisq(cl/2, n-1)
left <- (n - 1) * v / x1
right <- (n - 1) * v / x2
glue("Variance confidence interval with confidence level {cl}:\nLeft bound: {left}\nRight bound: {right}")
}
variance_confidence_interval(s1, 0.01)
mean_confidence_interval(s1, 0.01)
? t.test
? var.test
